@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap");

@layer base {
  // A darker version of the memo-active color, giving enough contrast on a white background, according to the WCAG tests.
  $memo-active-contrasted: color-mix(
    in srgb,
    rgb(from theme("colors.memo-active") r g b / var(--tw-text-opacity, 1)),
    black 30%
  );

  html {
    @apply font-roboto;

    --sb-thumb-color: color-mix(in srgb, theme("colors.memo-active") 80%, white);
    --sb-track-color: color-mix(in srgb, var(--sb-thumb-color) 20%, white);
    --sb-size: 12px;
  }

  * {
    scrollbar-color: var(--sb-thumb-color) var(--sb-track-color);
  }

  *::-webkit-scrollbar {
    width: var(--sb-size);
    height: var(--sb-size);
  }

  *::-webkit-scrollbar-track {
    background: var(--sb-track-color);
    border-radius: 14px;
  }

  *::-webkit-scrollbar-thumb {
    background: var(--sb-thumb-color);
    border-radius: 14px;
    border: 4px solid var(--sb-track-color);
  }

  input[type="checkbox"] {
    &:disabled {
      filter: brightness(0.8);
      &:checked {
        filter: brightness(0.75) contrast(3);
      }
    }
  }

  select {
    // Some versions of Chrome show this as grey.
    @apply bg-white;
  }

  a {
    @apply underline;
    // Make sure this color gives enough contrast on a hovered table row, according to the WCAG tests.
    color: color-mix(in srgb, rgb(from theme("colors.memo-active") r g b / var(--tw-text-opacity, 1)), blue 45%);
  }

  button {
    @mixin pressedWithShadow {
      transition: box-shadow 0.15s ease-out;
      &:active:not(:disabled) {
        @apply shadow-md;
      }
    }

    &.pressedWithShadow {
      @include pressedWithShadow;
    }

    &.primary {
      @apply p-2 rounded text-white;
      background-color: $memo-active-contrasted;
      @apply disabled:bg-opacity-50;
      &:active:not(:disabled) {
        @apply bg-memo-active;
      }
      @include pressedWithShadow;
    }

    &.secondary {
      @apply p-2 rounded border border-memo-active;
      color: $memo-active-contrasted;
      @apply disabled:text-opacity-50 disabled:border-opacity-50;
      &:active:not(:disabled) {
        @apply bg-hover;
      }
      @include pressedWithShadow;

      &.small {
        @apply px-1 py-0;
      }
    }
  }

  // Icons
  svg {
    // An icon displayed inline in text. It is black by default, and reacts to text-opacity-* classes.
    // Use the dimmed class to dim.
    &.inlineIcon {
      @apply shrink-0 inline mb-1 fill-current;
      &.strokeIcon {
        @apply stroke-current fill-none;
      }
    }

    // By default the fill color uses the current color, but with the strokeIcon class it's
    // the stroke color instead of fill color.
    @apply text-black;
    &.dimmed {
      @apply text-opacity-30;
    }
  }

  // Text that wraps text at natural wrapping points.
  .wrapText {
    @apply whitespace-pre-line;
    hyphens: auto;
  }
  // Text that wraps to always be fully visible.
  .wrapTextAnywhere {
    @apply wrapText;
    overflow-wrap: anywhere;
  }
}
